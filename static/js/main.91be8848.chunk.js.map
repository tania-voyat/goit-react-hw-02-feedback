{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/App.js","index.js","components/Statistics/Statistics.module.css"],"names":["module","exports","FeedbackOptions","onGoodFeedback","onNeutralFeedback","onBadFeedback","className","styles","feedback","type","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","App","state","handleGoodFeedback","console","log","setState","handleNeutralFeedback","handleBadFeedback","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,OAAS,kC,uHC4BZC,MAzBf,YAAgF,IAArDC,EAAoD,EAApDA,eAAgBC,EAAoC,EAApCA,kBAAmBC,EAAiB,EAAjBA,cAC5D,OACE,yBAAKC,UAAWC,IAAOC,UACrB,4BAAQC,KAAK,SAASH,UAAWC,IAAOG,OAAQC,QAASR,GAAzD,QAGA,4BACEM,KAAK,SACLH,UAAWC,IAAOG,OAClBC,QAASP,GAHX,WAOA,4BAAQK,KAAK,SAASH,UAAWC,IAAOG,OAAQC,QAASN,GAAzD,S,gBCaSO,MA1Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,6BACE,0CACCD,EAAQ,EACP,yBAAKV,UAAWC,IAAOW,YACrB,uCAAaL,GACb,0CAAgBC,GAChB,sCAAYC,GACZ,wCAAcC,EAAd,KACA,oDAA0BC,EAA1B,MAGF,sBCZaE,E,4MAEnBC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,mBAAqB,WACnBC,QAAQC,IAAI,QACZ,EAAKC,SAAS,CACZX,KAAM,EAAKO,MAAMP,KAAO,K,EAG5BY,sBAAwB,WACtBH,QAAQC,IAAI,WACZ,EAAKC,SAAS,CACZV,QAAS,EAAKM,MAAMN,QAAU,K,EAGlCY,kBAAoB,WAClBJ,QAAQC,IAAI,OACZ,EAAKC,SAAS,CACZT,IAAK,EAAKK,MAAML,IAAM,K,EAI1BY,mBAAqB,WACnB,OAAO,EAAKP,MAAMP,KAAO,EAAKO,MAAMN,QAAU,EAAKM,MAAML,K,EAE3Da,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKV,MAAMP,KAAc,EAAKc,uB,uDAGjD,OACE,iCACE,0DACA,kBAAC,EAAD,CACExB,eAAgB4B,KAAKV,mBACrBjB,kBAAmB2B,KAAKN,sBACxBpB,cAAe0B,KAAKL,oBAEtB,kBAAC,EAAD,CACEb,KAAMkB,KAAKX,MAAMP,KACjBC,QAASiB,KAAKX,MAAMN,QACpBC,IAAKgB,KAAKX,MAAML,IAChBC,MAAOe,KAAKJ,qBACZV,mBAAoBc,KAAKH,yC,GA/CFI,aCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDpC,EAAOC,QAAU,CAAC,WAAa,iC","file":"static/js/main.91be8848.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2KNUi\"};","import React from \"react\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FeedbackOptions({ onGoodFeedback, onNeutralFeedback, onBadFeedback }) {\r\n  return (\r\n    <div className={styles.feedback}>\r\n      <button type=\"button\" className={styles.button} onClick={onGoodFeedback}>\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.button}\r\n        onClick={onNeutralFeedback}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" className={styles.button} onClick={onBadFeedback}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onGoodFeedback: PropTypes.func,\r\n  onNeutralFeedback: PropTypes.func,\r\n  onBadFeedback: PropTypes.func,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      {total > 0 ? (\r\n        <div className={styles.statistics}>\r\n          <span>Good: {good}</span>\r\n          <span>Neutral: {neutral}</span>\r\n          <span>Bad: {bad}</span>\r\n          <span>Total: {total} </span>\r\n          <span>Positive feedback: {positivePercentage}%</span>\r\n        </div>\r\n      ) : (\r\n        \"No feedback given\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Statistics from \"./Statistics\";\r\n\r\n\r\nexport default class App extends Component {\r\n  static propTypes = {};\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleGoodFeedback = () => {\r\n    console.log(\"Good\");\r\n    this.setState({\r\n      good: this.state.good + 1,\r\n    });\r\n  };\r\n  handleNeutralFeedback = () => {\r\n    console.log(\"Neutral\");\r\n    this.setState({\r\n      neutral: this.state.neutral + 1,\r\n    });\r\n  };\r\n  handleBadFeedback = () => {\r\n    console.log(\"Bad\");\r\n    this.setState({\r\n      bad: this.state.bad + 1,\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\r\n  };\r\n  render() {\r\n    return (\r\n      <section>\r\n        <h2>Please leave your feedback</h2>\r\n        <FeedbackOptions\r\n          onGoodFeedback={this.handleGoodFeedback}\r\n          onNeutralFeedback={this.handleNeutralFeedback}\r\n          onBadFeedback={this.handleBadFeedback}\r\n        />\r\n        <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          total={this.countTotalFeedback()}\r\n          positivePercentage={this.countPositiveFeedbackPercentage()}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2ulyM\"};"],"sourceRoot":""}