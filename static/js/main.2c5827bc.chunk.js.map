{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/App.js","index.js","components/Statistics/Statistics.module.css"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","className","styles","feedback","type","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","App","state","handleFeedback","option","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,OAAS,kC,kKCoCZC,MAjCf,YAA+C,IAApBC,EAAmB,EAAnBA,gBACzB,OACE,yBAAKC,UAAWC,IAAOC,UACrB,4BACEC,KAAK,SACLH,UAAWC,IAAOG,OAClBC,QAAS,kBAAMN,EAAgB,UAHjC,QAOA,4BACEI,KAAK,SACLH,UAAWC,IAAOG,OAClBC,QAAS,kBAAMN,EAAgB,aAHjC,WAOA,4BACEI,KAAK,SACLH,UAAWC,IAAOG,OAClBC,QAAS,kBAAMN,EAAgB,SAHjC,S,gBCSSO,MA1Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,6BACE,0CACCD,EAAQ,EACP,yBAAKV,UAAWC,IAAOW,YACrB,uCAAaL,GACb,0CAAgBC,GAChB,sCAAYC,GACZ,wCAAcC,EAAd,KACA,oDAA0BC,EAA1B,MAGF,sBCbaE,E,4MAEnBC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,eAAiB,SAACC,GAChB,EAAKC,UAAS,SAACH,GACb,OAAO,eACJE,EAASF,EAAME,GAAU,O,EAKhCE,mBAAqB,WAAO,IAAD,EACM,EAAKJ,MACpC,OAFyB,EACjBP,KADiB,EACXC,QADW,EACFC,K,EAIzBU,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKP,MAAMP,KAAc,EAAKW,uB,uDAGzC,IAAD,EACwBI,KAAKR,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,iCACE,0DACA,kBAAC,EAAD,CAAiBV,gBAAiBuB,KAAKP,iBACvC,kBAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,KAAKJ,qBACZP,mBAAoBW,KAAKH,yC,GApCFI,aCAjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjD/B,EAAOC,QAAU,CAAC,WAAa,kC","file":"static/js/main.2c5827bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2KNUi\"};","import React from \"react\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <div className={styles.feedback}>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.button}\r\n        onClick={() => onLeaveFeedback(\"good\")}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.button}\r\n        onClick={() => onLeaveFeedback(\"neutral\")}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.button}\r\n        onClick={() => onLeaveFeedback(\"bad\")}\r\n      >\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onGoodFeedback: PropTypes.func,\r\n  onNeutralFeedback: PropTypes.func,\r\n  onBadFeedback: PropTypes.func,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      {total > 0 ? (\r\n        <div className={styles.statistics}>\r\n          <span>Good: {good}</span>\r\n          <span>Neutral: {neutral}</span>\r\n          <span>Bad: {bad}</span>\r\n          <span>Total: {total} </span>\r\n          <span>Positive feedback: {positivePercentage}%</span>\r\n        </div>\r\n      ) : (\r\n        \"No feedback given\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Statistics from \"./Statistics\";\r\n\r\nexport default class App extends Component {\r\n  static propTypes = {};\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleFeedback = (option) => {\r\n    this.setState((state) => {\r\n      return {\r\n        [option]: state[option] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <section>\r\n        <h2>Please leave your feedback</h2>\r\n        <FeedbackOptions onLeaveFeedback={this.handleFeedback} />\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={this.countTotalFeedback()}\r\n          positivePercentage={this.countPositiveFeedbackPercentage()}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2ulyM\"};"],"sourceRoot":""}